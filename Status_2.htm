<html>
<head>

<script type = "text/javascript">

var x=0;
var bin="0";
var Found=0;
var d;
function PageInit(){

CheckBoxArray=new Array(false,false,false,false,false,true,true,false);
Clear ="./images/Clear.bmp";
Alarm ="./images/Alarm.bmp";
Installed= "./images/OFF.bmp" ;

BitNumbTxt= new Array();
BitNumbTxt[0]="Status Bit 1 -- Not Used";
BitNumbTxt[1]="Status Bit 2 -- Not Used";
BitNumbTxt[2]="Status Bit 3 -- IO Error";
BitNumbTxt[3]="Status Bit 4 -- Not Used";
BitNumbTxt[4]="Status Bit 5 -- Undefined";
BitNumbTxt[5]="Status Bit 6 -- Control Inhibit";
BitNumbTxt[6]="Status Bit 7 -- Maintenance";
BitNumbTxt[7]="Status Bit 8 -- Not Used";
BitNumbTxt[8]="Status Bit 9 -- Not Used";
BitNumbTxt[9]="Status Bit 10 -- Not Used";
BitNumbTxt[10]="Status Bit 11 -- Not Used";
BitNumbTxt[11]="Status Bit 12 -- Not Used";
BitNumbTxt[12]="Status Bit 13 -- Not Used";

BitNumbTxtShrt= new Array();
BitNumbTxtShrt[0]="N/U";
BitNumbTxtShrt[1]="N/U";
BitNumbTxtShrt[2]="IO Err";
BitNumbTxtShrt[3]="N/U";
BitNumbTxtShrt[4]="Undfnd";
BitNumbTxtShrt[5]="CI";
BitNumbTxtShrt[6]="Maint";
BitNumbTxtShrt[7]="N/U";
BitNumbTxtShrt[8]="N/U";
BitNumbTxtShrt[9]="N/U";
BitNumbTxtShrt[10]="N/U";
BitNumbTxtShrt[11]="N/U";
BitNumbTxtShrt[12]="N/U";

SelectBitArray();
}


function SetSelectBits(){

CheckBoxArray[0] = document.SelectBitsForm.SelectBits[0].checked;
CheckBoxArray[1] = document.SelectBitsForm.SelectBits[1].checked;
CheckBoxArray[2] = document.SelectBitsForm.SelectBits[2].checked;
CheckBoxArray[3] = document.SelectBitsForm.SelectBits[3].checked;
CheckBoxArray[4] = document.SelectBitsForm.SelectBits[4].checked;
CheckBoxArray[5] = document.SelectBitsForm.SelectBits[5].checked;
CheckBoxArray[6] = document.SelectBitsForm.SelectBits[6].checked;
CheckBoxArray[7] = document.SelectBitsForm.SelectBits[7].checked;
SelectBitArray();
}


function SelectBitArray(){

for (sLoop=0;sLoop<8;sLoop++) 				
	{		
	if (CheckBoxArray[sLoop]){
		document.StatusLights.Lights[sLoop].style.visibility ="visible";
		document.StatusLights.LightLabel[sLoop].style.visibility ="visible";
		document.StatusLights.LightLabel[sLoop].value =BitNumbTxtShrt[sLoop];
		document.StatusLights.Lights[sLoop].src =Installed;
		}
		else
		{
		document.StatusLights.Lights[sLoop].style.visibility ="hidden";
		document.StatusLights.LightLabel[sLoop].style.visibility ="hidden";
		}	
	}


StatusBits();
}

function StatusBits() {
d = document.getElementById("debug").checked;
var x = document.getElementById("deci").value;
	
	if ((/[^0-9]/g.test(x)) & x > "") {						// Test for Not Null and Interger
		alert ("You must enter Status as Interger");
		document.getElementById("deci").value = "";
		document.getElementById("deci").focus();
		return false;
	}

	if(x==""){												// Test for Null Value - Set 0 if empty (remember the function
		x=0;
	   }

x = parseInt(x);							// Convert Status to Bits 
var bin = x.toString(2);
binary = bin.split(''); 

Length=0;


for (sLoop=0;sLoop<17;sLoop++) 				//Parse Resulting Array of 1,0,0 into Boolean Values
	{										//Set Lenght of Resulting Binary Number (Needed below)
	
	switch(binary[sLoop])
		{
		case "1" :
			binary[sLoop]=true;
			Length=Length+1;
			break;
		case "0" :
			binary[sLoop]=false;
			Length=Length+1;
			break;
		case " ":
			break;
		default:
			break;
		}

	}

// Mask binary (Converted Status set as Boolean to Array of Fixed Length
// This also get the bits in the right order

StatusBitArray = new Array(false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false);

StatusBitArrayIndex = (Length-1);			// Based Upon Length of binary start at this
											// point and work down in StatusBitArray

for (sLoop=0;sLoop<Length;sLoop++) 						
	{				
	StatusBitArray[StatusBitArrayIndex]=binary[sLoop];
	StatusBitArrayIndex=StatusBitArrayIndex-1;
	}

CreateStatus();


} // End Create Status Bits from Status as Integer



function CreateStatusLightsHtml()
{
Installed= "./images/OFF.bmp" ;
TextArrayIndex=0;
ImageArrayIndex=0;
var For_Variable_Name ="Signal_Name_Obj"
var table_width = 200;
var border = 0;
var form_name ="StatusLights";
var input_type ="text";
var text_field_size =4;

//This is what the html needs to look like <td><input type="text" value="Bit1" id="Bit1" name="LightLabel" value="0" size="4" style=" writing-mode: tb-rl;font-weight: bold; border:0px"></td>

var StatusLightsHtml = "<table width="+ table_width + "border="+ border + ">" + "<form name=" + form_name + ">" + "<tr>"; 
    
				for(htmLoop=1;htmLoop<9;htmLoop++) 				
					{		
					StatusLightsHtml = StatusLightsHtml + "<td>"+"<input type="+ input_type+ " value="+ "Bit "+ htmLoop + " id=" + "Bit " + htmLoop +
					" name="+"LightLabel" + " value=" + htmLoop + " size=" + text_field_size + " style=" + "writing-mode:tb-rl;font-weight:bold;border:" + 0 +"px>" + "</td>";
					TextArrayIndex = TextArrayIndex+1;
					}

//<td><img src=Installed alt="Light 1" name="Lights" id="Light1" value="0" style="height: 25; width: 25; visibility:hidden"/></td>

StatusLightsHtml = StatusLightsHtml + "</tr>" + "<tr>";
				
				for(htmLoop=1;htmLoop<9;htmLoop++) 	
					{
					StatusLightsHtml = StatusLightsHtml + "<td>" + "<img src=" + Installed + " alt="+ "Light " + htmLoop + " name=Lights" + " id="+"Light " + htmLoop+ " value="  + ImageArrayIndex + 
					" style="+" height: 25; width: 25; visibility:hidden" + "/>"+"</td>";
					ImageArrayIndex = ImageArrayIndex+1;
					}
					alert(StatusLightsHtml);
StatusLightsHtml = StatusLightsHtml +  "</form>" + "</tr>" + "</table>";

document.getElementById("StatusLight_div").innerHTML = StatusLightsHtml;

} 

// This creates the Results Status by Status Text ...


function CreateStatus(){

	var Found = 0;
	var Pass=true;
	var Icon = "<br>"+"<Strong>" + "Status as Text" +  "</Strong>" + "<br>" + 
	"<ul>";

		for(sLoop=0;sLoop<9;sLoop++)
			{
			if (CheckBoxArray[sLoop]&StatusBitArray[sLoop])
					{
				document.StatusLights.Lights[sLoop].src =Alarm;
				Icon = Icon + "<li>"+ BitNumbTxt[sLoop] + "</li>";	
				Found=Found+1;
					}
				
			if (CheckBoxArray[sLoop]&~StatusBitArray[sLoop])
					{
				document.StatusLights.Lights[sLoop].src =Clear;
					}
			}
		
		
		
		if(Found==0){
		Icon = Icon + "<li>" + "No Bits"  + "</li>";	
		}
    
	//Icon = Icon + "<li>"+ "Debug Checkbox " + d + "</li>";
	Icon = Icon + "</ul>";

 document.getElementById("Icons").innerHTML = Icon;


 } //Close Function CreateStatus HTML	


function DetectDebugCheckbox(){
	d = document.getElementById("debug").checked;
	if(d){
	CreateDebugHtml();
	     }
	else
		{
	document.getElementById("DebugField").innerHTML = " ";
	return;
		}
}


function CreateDebugHtml(){


	var DebugTxt = "<form name="+"SelectBitsForm"+ ">" +
"<b>" + "Bit1" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit1" + " value=1" + " onclick =" + "SetSelectBits()" + ">" +
"<b>" + "Bit2" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit2" + " value=" + 2 + " onclick =" + "SetSelectBits()" + ">" +
"<b>" + "Bit3" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit3" + " value=" + 3 + " onclick =" + "SetSelectBits()" + ">" +
"<b>" + "Bit4" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit4" + " value=" + 4 + " onclick =" + "SetSelectBits()" + ">" +
"<br>"+
"<b>" + "Bit5" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit5" + " value=" + 5 + " onclick =" + "SetSelectBits()" + ">" +
"<b>" + "Bit6" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit6" + " value=" + 6 + " onclick =" + "SetSelectBits()" + ">" +
"<b>" + "Bit7" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit7" + " value=" + 7 + " onclick =" + "SetSelectBits()" + ">" +
"<b>" + "Bit8" + "</b>" + "<input type=" + "checkbox" + " name=" + "SelectBits"  + " id =" + "Bit8" + " value=" + 8 + " onclick =" + "SetSelectBits()" + ">" +
"</form>";


	DebugTxt = DebugTxt + "<br>" + "<br>" + "<Strong>" + "Debug" +  "</Strong>" + "<br>" + "<br>" + 					
	"The binary representation of " + x + " is " + bin + "<br>" + "<br>";
	BitNumb=0;
	for (sLoop=0;sLoop<Length;sLoop++)
		{
		if(StatusBitArray[sLoop]){
		DebugTxt = DebugTxt +  "Status Bit Array[" + BitNumb + "] " + BitNumbTxt[BitNumb]+ " "  + "<br>";
		}
		BitNumb=BitNumb+1;
		}

	DebugTxt = DebugTxt + "<br>" + "<Strong>"+ "Array of Status " + "</Strong>" + binary + "<br>" + "<br>";
	if(Length>1){
	DebugTxt = DebugTxt +  "Length " + Length + " Bits" + "<br>" + "<br>";
	}
	else
	DebugTxt = DebugTxt +  "Length " + Length + " Bit" + "<br>" + "<br>";


	DebugTxt = DebugTxt + "<Strong>" + "Debug" +  "</Strong>" + "<br>" + 
	"<ul>" +
	"<li>"+ "Binary0 " + binary[0] + " Status Bit 0 " + StatusBitArray[0] + "</li>" + 
	"<li>"+ "Binary1 " + binary[1] + " Status Bit 1 " + StatusBitArray[1] + "</li>" + 
	"<li>"+ "Binary2 " + binary[2] + " Status Bit 2 " + StatusBitArray[2] + "</li>" + 
	"<li>"+ "Binary3 " + binary[3] + " Status Bit 3 " + StatusBitArray[3] + "</li>" + 
	"<li>"+ "Binary4 " + binary[4] + " Status Bit 4 " + StatusBitArray[4] + "</li>" + 
	"<li>"+ "Binary5 " + binary[5] + " Status Bit 5 " + StatusBitArray[5] + "</li>" + 
	"<li>"+ "Binary6 " + binary[6] + " Status Bit 6 " + StatusBitArray[6] + "</li>" + 
	"<li>"+ "Binary7 " + binary[7] + " Status Bit 7 " + StatusBitArray[7] + "</li>" + 
	"<li>"+ "Monitored Status Points Found " + Found + "</li>" + 
	"<li>"+ "Debug Checkbox " + d + "</li>" + 
	"<li>"+ "Bit1 Checkbox " + CheckBoxArray[0] + "</li>" + 
	"<li>"+ "Bit2 Checkbox " + CheckBoxArray[1] + "</li>" + 
	"<li>"+ "Bit3 Checkbox " + CheckBoxArray[2] + "</li>" + 
	"<li>"+ "Bit4 Checkbox " + CheckBoxArray[3] + "</li>" + 
	"<li>"+ "Bit5 Checkbox " + CheckBoxArray[4] + "</li>" + 
	"<li>"+ "Bit6 Checkbox " + CheckBoxArray[5] + "</li>" + 
	"<li>"+ "Bit7 Checkbox " + CheckBoxArray[6] + "</li>" + 
	"<li>"+ "Bit8 Checkbox " + CheckBoxArray[7] + "</li>" + 

	"</ul>";

 

//if(d)
//	{ 
document.getElementById("DebugField").innerHTML = DebugTxt;
//document.SelectBitsForm.SelectBits[5].checked=true;
//document.SelectBitsForm.SelectBits[6].checked=true;
//	}



} //Close Function CreateDebugHtml



</script>
</head>

<body onLoad="PageInit()" >

<b>Enter Status Value: </b><input type = "text" name = "deci" id = "deci" size = "15" maxlength = "15" onKeyUp="StatusBits()"/>
<b> Debug:</b><input type="checkbox" name="debug" id = "debug" value="off"  onclick ="DetectDebugCheckbox()" ><br>
<br>
<br>
<div id = "StatusLight_div"></div>


<br>
<br>

<br>
<br>
<script type = "text/javascript">
	CreateStatusLightsHtml();
</script>
<br>
<br>

<div id = "result"></div>

<div id = "ICONS"></div>

<div id = "DebugField"></div>


</body>
</html>





